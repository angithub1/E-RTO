{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProject\\\\e-RTO-main\\\\E-RTO react\\\\src\\\\components\\\\CitizenRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport validator from 'validator';\nimport AdminNavBar from \"./AdminNavBar\";\nimport CitizenNavBar from \"./CitizenNavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CitizenRegister() {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [conMsg, setConMsg] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState(\"\");\n  const [PassErrorMessage, setPassErrorMessage] = useState(\"\");\n  const [emailFlag, setEmailFlag] = useState(\"false\");\n  const [passFlag, setPassFlag] = useState(\"false\");\n  const [contactFlag, setContactFlag] = useState(\"false\");\n  const [passColor, setPassColor] = useState(\"white\");\n  const [state, setState] = useState({\n    fname: \"\",\n    lname: \"\",\n    contact_no: \"\",\n    email: \"\",\n    pwd: \"\"\n  });\n\n  const handleInput = ev => {\n    setState(state => ({ ...state,\n      [ev.target.name]: ev.target.value\n    }));\n  };\n\n  const contactValidate = ev => {\n    ev.preventDefault();\n    var phoneno = /^\\d{10}$/;\n\n    if (state.contact_no.match(phoneno)) {\n      setConMsg(\"\");\n      setContactFlag(\"true\");\n    } else {\n      setConMsg(\"Please enter valid Contact Number\");\n      setContactFlag(\"false\");\n    }\n  };\n\n  const emailExist = ev => {\n    //alert(\"hi\");\n    ev.preventDefault();\n    var pattern = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.com$/;\n\n    if (state.email.match(pattern)) {\n      fetch(\"http://localhost:8080/emailexist?email=\" + state.email).then(resp => resp.text()).then(data => {\n        console.log(data);\n\n        if (data === \"true\") {\n          setEmailMsg(\"Email already Used. Please Choose defferent Email ID\");\n          setEmailFlag(\"false\");\n        } else {\n          setEmailMsg(\"\");\n          setEmailFlag(\"true\");\n        }\n      });\n    } else {\n      setEmailMsg(\"Enter Valid email-ID\");\n      setEmailFlag(\"false\");\n    }\n  };\n\n  const passValidation = ev => {\n    ev.preventDefault(); //alert(\"pass\")\n\n    if (validator.isStrongPassword(state.pwd, {\n      minLength: 8,\n      minLowercase: 1,\n      minUppercase: 1,\n      minNumbers: 1,\n      minSymbols: 1\n    })) {\n      setPassErrorMessage('Strong Password');\n      setPassColor(\"white\");\n      setPassFlag(\"true\");\n    } else {\n      setPassErrorMessage('Password is Not Strong');\n      setPassColor('red');\n      setPassFlag(\"false\");\n    }\n  };\n\n  const citizenreg = ev => {\n    ev.preventDefault();\n\n    if (emailFlag === \"true\" && passFlag === \"true\" && contactFlag === \"true\") {\n      const req = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          fname: state.fname,\n          lname: state.lname,\n          contact_no: state.contact_no,\n          email: state.email,\n          password: state.pwd\n        })\n      };\n      console.log(req);\n      fetch(\"http://localhost:8080/citizenreg\", req).then(resp => resp.text()).then(data => {\n        if (data.length != 0) {\n          setMsg(\"Registration Successfull...\");\n        } else {\n          setMsg(\"Registration Failed...\");\n        }\n      });\n    } else {\n      setMsg(\"Please fill valid Data\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-secondary text-white\",\n    style: {\n      height: \"600px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: citizenreg,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"display-6\",\n              children: \"New User Registration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"fname\",\n              id: \"fname\",\n              placeholder: \"First Name\",\n              onChange: handleInput,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"lname\",\n              id: \"lname\",\n              placeholder: \"Last Name\",\n              onChange: handleInput,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contact_no\",\n              children: \"Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"contact_no\",\n              id: \"contact_no\",\n              placeholder: \"Contact Number\",\n              onChange: handleInput,\n              onBlur: contactValidate,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: conMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-control\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Email\",\n              onChange: handleInput,\n              onBlur: emailExist,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: emailMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"pwd\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"pwd\",\n              id: \"pwd\",\n              placeholder: \"Password\",\n              onChange: handleInput,\n              onBlur: passValidation,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: passColor\n              },\n              children: PassErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CitizenRegister, \"M7e6txfa3gkrKmUJRvdFtw0OJtg=\");\n\n_c = CitizenRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitizenRegister\");","map":{"version":3,"sources":["C:/MyProject/e-RTO-main/E-RTO react/src/components/CitizenRegister.js"],"names":["React","useState","validator","AdminNavBar","CitizenNavBar","CitizenRegister","msg","setMsg","conMsg","setConMsg","emailMsg","setEmailMsg","PassErrorMessage","setPassErrorMessage","emailFlag","setEmailFlag","passFlag","setPassFlag","contactFlag","setContactFlag","passColor","setPassColor","state","setState","fname","lname","contact_no","email","pwd","handleInput","ev","target","name","value","contactValidate","preventDefault","phoneno","match","emailExist","pattern","fetch","then","resp","text","data","console","log","passValidation","isStrongPassword","minLength","minLowercase","minUppercase","minNumbers","minSymbols","citizenreg","req","method","headers","body","JSON","stringify","password","length","height","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport validator from 'validator';\r\nimport AdminNavBar from \"./AdminNavBar\";\r\nimport CitizenNavBar from \"./CitizenNavBar\";\r\n\r\nexport default function CitizenRegister()\r\n{\r\n    const [msg,setMsg] = useState(\"\");\r\n    const[conMsg, setConMsg]= useState(\"\");\r\n    const[emailMsg,setEmailMsg]= useState(\"\");\r\n\r\n    const [PassErrorMessage, setPassErrorMessage] = useState(\"\")\r\n\r\n    const [emailFlag,setEmailFlag] = useState(\"false\");\r\n    const [passFlag,setPassFlag] = useState(\"false\");\r\n    const [contactFlag,setContactFlag] = useState(\"false\");\r\n\r\n    const [passColor,setPassColor] = useState(\"white\");\r\n\r\n    const[state, setState]= useState(\r\n        {\r\n            fname:\"\",\r\n            lname:\"\",\r\n            contact_no:\"\",\r\n            email:\"\",\r\n            pwd:\"\"\r\n        }\r\n    )\r\n\r\n    const handleInput=(ev)=>{\r\n        setState((state)=>(\r\n            {\r\n                ...state,\r\n                [ev.target.name]: ev.target.value \r\n            }\r\n        ));\r\n    }\r\n\r\n    const contactValidate=(ev)=>{\r\n        ev.preventDefault();\r\n        var phoneno = /^\\d{10}$/;\r\n        if (state.contact_no.match(phoneno) ) \r\n        {\r\n            setConMsg(\"\")\r\n            setContactFlag(\"true\");\r\n          } else {\r\n            setConMsg(\"Please enter valid Contact Number\")\r\n            setContactFlag(\"false\");\r\n          }\r\n    } \r\n\r\n\r\n    const emailExist=(ev)=>{\r\n        //alert(\"hi\");\r\n        ev.preventDefault();\r\n        var pattern= /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.com$/;\r\n        if(state.email.match(pattern))\r\n        {\r\n            fetch(\"http://localhost:8080/emailexist?email=\"+state.email)\r\n            .then(resp => resp.text())\r\n            .then(data => {\r\n                console.log(data);\r\n                if(data === \"true\")\r\n                {\r\n                    setEmailMsg(\"Email already Used. Please Choose defferent Email ID\") ;\r\n                    setEmailFlag(\"false\");\r\n                }\r\n                else\r\n                {\r\n                    setEmailMsg(\"\");\r\n                    setEmailFlag(\"true\");\r\n                }\r\n            }) \r\n        }\r\n        else\r\n        {\r\n            setEmailMsg(\"Enter Valid email-ID\") ;\r\n            setEmailFlag(\"false\");\r\n        }\r\n        \r\n    }\r\n\r\n    const passValidation=(ev)=>{\r\n        ev.preventDefault();\r\n        //alert(\"pass\")\r\n        if (validator.isStrongPassword(state.pwd, {\r\n            minLength: 8, minLowercase: 1,\r\n            minUppercase: 1, minNumbers: 1, minSymbols: 1\r\n          })) {\r\n            setPassErrorMessage('Strong Password')\r\n            setPassColor(\"white\");\r\n            setPassFlag(\"true\");\r\n          } else {\r\n            setPassErrorMessage('Password is Not Strong')\r\n            setPassColor('red');\r\n            setPassFlag(\"false\");\r\n          }\r\n       \r\n    }\r\n\r\n    const citizenreg=(ev)=>{\r\n        ev.preventDefault();\r\n        if(emailFlag === \"true\" && passFlag===\"true\"  && contactFlag===\"true\")\r\n        {\r\n            const req= {\r\n                method: 'POST',\r\n                headers: {\r\n                    'content-type':'application/json'\r\n                },\r\n                body:JSON.stringify(\r\n                    {\r\n                        fname:state.fname,\r\n                        lname:state.lname,\r\n                        contact_no: state.contact_no,\r\n                        email: state.email,\r\n                        password: state.pwd\r\n                    })\r\n            }\r\n    console.log(req);\r\n            fetch(\"http://localhost:8080/citizenreg\", req)\r\n                .then(resp => resp.text())\r\n                .then(data => {\r\n                    if(data.length != 0)\r\n                    {\r\n                        setMsg(\"Registration Successfull...\") ;\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        setMsg(\"Registration Failed...\") ;\r\n                    }\r\n                })    \r\n        }\r\n        else{\r\n            setMsg(\"Please fill valid Data\")\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"bg-secondary text-white\" style={{height:\"600px\"}}>   \r\n        <div className=\"container\">\r\n            <form onSubmit={citizenreg}>\r\n                <div className=\"form-row col-md-12\">\r\n                     <div className=\"form-group col-md-6\">\r\n                        <h6 className=\"display-6\">New User Registration</h6>\r\n                        <label htmlFor=\"fname\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name= \"fname\" id=\"fname\" placeholder=\"First Name\" onChange={handleInput}  required/>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"lname\">Last Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name= \"lname\" id=\"lname\" placeholder=\"Last Name\" onChange={handleInput}  required/>\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"contact_no\">Contact Number</label>\r\n                        <input type=\"text\" className=\"form-control\"  name= \"contact_no\" id=\"contact_no\" placeholder=\"Contact Number\" onChange={handleInput} onBlur={contactValidate} required/>\r\n                        <p style={{color:\"red\"}}>{conMsg}</p>\r\n                    </div>\r\n\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={handleInput} onBlur={emailExist}  required/>\r\n                        <p style={{color:\"red\"}}>{emailMsg}</p>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label htmlFor=\"pwd\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"pwd\" id=\"pwd\" placeholder=\"Password\" onChange={handleInput} onBlur={passValidation}  required/>\r\n                        <p style={{color:passColor}}>{PassErrorMessage}</p>\r\n                        <button type=\"submit\" className=\"btn btn-primary\" >Sign Up</button>\r\n                        <p >{msg}</p>                        \r\n                    </div>\r\n                </div>\r\n                \r\n         </form>\r\n         \r\n        </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}