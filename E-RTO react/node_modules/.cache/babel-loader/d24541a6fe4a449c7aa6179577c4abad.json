{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyProject\\\\e-RTO-main\\\\E-RTO react\\\\src\\\\components\\\\DrivingTestSlotBooking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport myimg from '../images/RTOS.jpg';\nimport CitizenNavBar from \"./CitizenNavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DrivingSlotBooking() {\n  _s();\n\n  const [msg, setMsg] = useState(\"\");\n  const [state, setState] = useState({\n    date: \"\",\n    selectedSlot: 0\n  });\n  const [slots, setSlots] = useState([]);\n\n  const handleInput = ev => {\n    setState(state => ({ ...state,\n      [ev.target.name]: ev.target.value\n    }));\n  };\n\n  const getFreeSlots = ev => {\n    ev.preventDefault(); //alert(state.date)\n\n    fetch(\"http://localhost:8080/getfreeslots?date=\" + state.date).then(resp => resp.json().then(data => {\n      console.log(data);\n      setSlots(data);\n    }));\n  };\n\n  const bookSlot = ev => {\n    ev.preventDefault();\n    alert(state.date);\n    alert(state.selectedSlot);\n    alert(JSON.parse(localStorage.getItem(\"loggeduser\")).citizen_id);\n    const req = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        cid: JSON.parse(localStorage.getItem(\"loggeduser\")).citizen_id,\n        slot_id: state.selectedSlot,\n        date: state.date\n      })\n    };\n    fetch(\"http://localhost:8080/bookslot\", req).then(resp => resp.json().then(data => {\n      console.log(data);\n\n      if (data === 1) {\n        setMsg(\"Slot has been booked...\");\n      } else {\n        setMsg(\"Slot booking failed\");\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"500px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CitizenNavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Book Slot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container bg-primary text-white col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row row g-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-control col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"date\",\n                children: \"Select Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                name: \"date\",\n                id: \"date\",\n                onChange: handleInput,\n                onBlur: getFreeSlots,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"slot\",\n                children: \"Available Slots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"selectedSlot\",\n                name: \"selectedSlot\",\n                onChange: handleInput,\n                children: slots.map(v => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: v.slot_id,\n                    children: [\"Slot-\", v.slot_id, \":(\", v.start_time, \"-\", v.end_time, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 52\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: bookSlot,\n                children: \"Book Slot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this);\n}\n\n_s(DrivingSlotBooking, \"cw8/zmUpJFFc5H+GdSFJU8BW3nE=\");\n\n_c = DrivingSlotBooking;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrivingSlotBooking\");","map":{"version":3,"sources":["C:/MyProject/e-RTO-main/E-RTO react/src/components/DrivingTestSlotBooking.js"],"names":["React","useState","useEffect","myimg","CitizenNavBar","DrivingSlotBooking","msg","setMsg","state","setState","date","selectedSlot","slots","setSlots","handleInput","ev","target","name","value","getFreeSlots","preventDefault","fetch","then","resp","json","data","console","log","bookSlot","alert","JSON","parse","localStorage","getItem","citizen_id","req","method","headers","body","stringify","cid","slot_id","height","map","v","start_time","end_time"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\"\r\nimport myimg from '../images/RTOS.jpg';\r\nimport CitizenNavBar from \"./CitizenNavBar\";\r\n\r\n\r\n\r\nexport default function DrivingSlotBooking(){\r\n\r\n\r\n    \r\n    const[msg, setMsg]= useState(\"\")\r\n\r\n    const[state, setState]= useState(\r\n        {\r\n            date:\"\",\r\n            selectedSlot:0\r\n        }\r\n    )\r\n\r\n    const[slots, setSlots]= useState([])\r\n\r\n    const handleInput=(ev)=>{\r\n        setState((state)=>(\r\n         {\r\n             ...state,\r\n             [ev.target.name]: ev.target.value \r\n         }\r\n     ));\r\n    }\r\n\r\n    const getFreeSlots=(ev)=>{\r\n        ev.preventDefault();\r\n        //alert(state.date)\r\n        fetch(\"http://localhost:8080/getfreeslots?date=\"+ state.date)\r\n        .then(resp=> resp.json()\r\n        .then(data=>{\r\n            console.log(data)\r\n            setSlots(data);\r\n        }))\r\n    }\r\n\r\n    const bookSlot=(ev)=>{\r\n        ev.preventDefault();\r\n        alert(state.date)\r\n        alert(state.selectedSlot)\r\n        alert(JSON.parse(localStorage.getItem(\"loggeduser\")).citizen_id)\r\n        const req= {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body:  JSON.stringify(\r\n                {\r\n                    cid: JSON.parse(localStorage.getItem(\"loggeduser\")).citizen_id,\r\n                    slot_id:state.selectedSlot,\r\n                    date:state.date\r\n                }\r\n            )}\r\n        fetch(\"http://localhost:8080/bookslot\", req)\r\n        .then(resp=> resp.json()\r\n        .then(data=>{\r\n            console.log(data);\r\n            if(data === 1)\r\n            {\r\n                setMsg(\"Slot has been booked...\")\r\n            }\r\n            else{\r\n                setMsg(\"Slot booking failed\")\r\n            }\r\n        }))\r\n    }\r\n\r\n    return(\r\n            <div style={{ height:\"500px\"}}>\r\n                <div  >  \r\n                     <CitizenNavBar/>\r\n                     <h4>Book Slot</h4>\r\n                     <div className=\"container bg-primary text-white col-md-4\">\r\n                        <form>\r\n                            <div className=\"form-row row g-3\">\r\n                                <div className=\"form-control col-md-12\">\r\n                                    <label htmlFor=\"date\">Select Date</label>\r\n                                    <input type=\"date\" className=\"form-control\" name= \"date\" id=\"date\"  onChange={handleInput} onBlur={getFreeSlots}  required/>\r\n                                \r\n                                    <br/><label htmlFor=\"slot\">Available Slots</label>\r\n                                    <select  id=\"selectedSlot\" name=\"selectedSlot\" onChange={handleInput}>\r\n                                        {\r\n                                            slots.map((v)=>{\r\n                                                return(\r\n                                                   <option  value={v.slot_id}>Slot-{v.slot_id}:({v.start_time}-{v.end_time})</option>                               \r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                    <br/><button type=\"submit\" onClick={bookSlot}>Book Slot</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <div>{msg}</div>\r\n                     </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}