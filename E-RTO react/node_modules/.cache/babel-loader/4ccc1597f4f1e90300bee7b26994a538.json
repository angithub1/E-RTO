{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anis\\\\Desktop\\\\e-rto\\\\E-RTO\\\\E-RTO react\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport MainMenu from \"./MainMenu\";\nimport myStore from \"./Store\";\nimport myimg from '../images/RTOS.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  let navigate = useNavigate();\n  const [errormsg, setErrormsg] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    pwd: \"\",\n    citizen: {},\n    staff: {}\n  });\n\n  const handleInput = ev => {\n    setState(state => ({ ...state,\n      [ev.target.name]: ev.target.value\n    }));\n  };\n\n  const login = ev => {\n    ev.preventDefault(); //alert(this.state.email);\n    //alert(this.state.pwd);\n\n    const req = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: state.email,\n        password: state.pwd\n      })\n    };\n    fetch(\"http://localhost:8080/logincheck\", req).then(resp => resp.text()).then(data => {\n      if (data.length != 0) {\n        const json = JSON.parse(data);\n\n        if (json.role) {\n          //console.log(json.role);\n          localStorage.setItem(\"loggeduser\", JSON.stringify(json));\n          myStore.dispatch({\n            type: 'LOGGEDIN'\n          });\n          navigate('/adminhome');\n        } else if (json.user.role) {\n          if (json.user.role === \"citizen\") {\n            localStorage.setItem(\"loggeduser\", JSON.stringify(json));\n            myStore.dispatch({\n              type: 'LOGGEDIN'\n            });\n            navigate('/citizenhome');\n          } else if (json.user.role === \"staff\") {\n            localStorage.setItem(\"loggeduser\", JSON.stringify(json));\n            myStore.dispatch({\n              type: 'LOGGEDIN'\n            });\n            navigate('/staffhome');\n          }\n        }\n      } else setErrormsg('Wrong ID/pwd');\n    });\n    /*fetch(\"http://localhost:8080/logincheck\", req)\r\n        .then(resp => resp.text())\r\n        .then(data => {\r\n                        alert(data);\r\n                        if(data.length != 0)\r\n                        {\r\n                            const obj = JSON.parse(data);\r\n                            alert(JSON.stringify(obj));\r\n                            localStorage.setItem(\"loggeduser\", JSON.stringify(obj));\r\n                            let role = (JSON.parse(localStorage.getItem(\"loggeduser\"))).user.role;\r\n                            alert(role);\r\n                            //console.log(role);\r\n                            if(role === \"staff\")\r\n                            {\r\n                                myStore.dispatch({type:'LOGGEDIN'});\r\n                                navigate('/staffhome');                                    \r\n                            }\r\n                            else if(role === \"citizen\")\r\n                            {\r\n                                myStore.dispatch({type:'LOGGEDIN'});\r\n                                navigate('/citizenhome');\r\n                            }\r\n                            else\r\n                            {\r\n                                navigate('/adminhome');\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            setState((state)=>(\r\n                                {\r\n                                    ...state,\r\n                                    errormsg: \"Wrong ID/password\"\r\n                                }\r\n                            ));\r\n                        }\r\n                            \r\n                                \r\n                     });   */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundImage: `url(${myimg})`,\n      height: \"500px\",\n      backgroundPosition: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                name: \"email\",\n                id: \"email\",\n                placeholder: \"Email\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group col-md-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputPassword4\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"pwd\",\n                id: \"pwd\",\n                placeholder: \"Password\",\n                onChange: handleInput\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 149\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-danger\",\n                onClick: login,\n                children: \"LOGIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-danger\",\n                children: errormsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Login, \"JrMmoalgXlbEfNuQrbHTGQPOq5I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Anis/Desktop/e-rto/E-RTO/E-RTO react/src/components/Login.js"],"names":["React","useState","useNavigate","MainMenu","myStore","myimg","Login","navigate","errormsg","setErrormsg","state","setState","email","pwd","citizen","staff","handleInput","ev","target","name","value","login","preventDefault","req","method","headers","body","JSON","stringify","password","fetch","then","resp","text","data","length","json","parse","role","localStorage","setItem","dispatch","type","user","backgroundImage","height","backgroundPosition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAIC,QAAQ,GAAEL,WAAW,EAAzB;AACA,QAAM,CAACM,QAAD,EAAUC,WAAV,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAAES,KAAF,EAASC,QAAT,IAAoBV,QAAQ,CAC9B;AACIW,IAAAA,KAAK,EAAC,EADV;AAEIC,IAAAA,GAAG,EAAC,EAFR;AAGIC,IAAAA,OAAO,EAAC,EAHZ;AAIIC,IAAAA,KAAK,EAAC;AAJV,GAD8B,CAAlC;;AAUA,QAAMC,WAAW,GAAEC,EAAD,IAAM;AACpBN,IAAAA,QAAQ,CAAED,KAAD,KACL,EACI,GAAGA,KADP;AAEI,OAACO,EAAE,CAACC,MAAH,CAAUC,IAAX,GAAkBF,EAAE,CAACC,MAAH,CAAUE;AAFhC,KADK,CAAD,CAAR;AAMH,GAPD;;AASA,QAAMC,KAAK,GAAEJ,EAAD,IAAM;AACdA,IAAAA,EAAE,CAACK,cAAH,GADc,CAEd;AACA;;AACA,UAAMC,GAAG,GAAE;AACPC,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFF;AAKPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACIhB,QAAAA,KAAK,EAAEF,KAAK,CAACE,KADjB;AAEIiB,QAAAA,QAAQ,EAAEnB,KAAK,CAACG;AAFpB,OADE;AALC,KAAX;AAYAiB,IAAAA,KAAK,CAAC,kCAAD,EAAqCP,GAArC,CAAL,CACKQ,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,UAAGA,IAAI,CAACC,MAAL,IAAe,CAAlB,EACA;AACI,cAAMC,IAAI,GAAGT,IAAI,CAACU,KAAL,CAAWH,IAAX,CAAb;;AACA,YAAGE,IAAI,CAACE,IAAR,EACA;AACI;AACAC,UAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCb,IAAI,CAACC,SAAL,CAAeQ,IAAf,CAAnC;AACAhC,UAAAA,OAAO,CAACqC,QAAR,CAAiB;AAACC,YAAAA,IAAI,EAAC;AAAN,WAAjB;AACAnC,UAAAA,QAAQ,CAAC,YAAD,CAAR;AACH,SAND,MAOK,IAAG6B,IAAI,CAACO,IAAL,CAAUL,IAAb,EACL;AACI,cAAGF,IAAI,CAACO,IAAL,CAAUL,IAAV,KAAmB,SAAtB,EACA;AACIC,YAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCb,IAAI,CAACC,SAAL,CAAeQ,IAAf,CAAnC;AACAhC,YAAAA,OAAO,CAACqC,QAAR,CAAiB;AAACC,cAAAA,IAAI,EAAC;AAAN,aAAjB;AACCnC,YAAAA,QAAQ,CAAC,cAAD,CAAR;AACJ,WALD,MAMK,IAAG6B,IAAI,CAACO,IAAL,CAAUL,IAAV,KAAmB,OAAtB,EACL;AACIC,YAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCb,IAAI,CAACC,SAAL,CAAeQ,IAAf,CAAnC;AACAhC,YAAAA,OAAO,CAACqC,QAAR,CAAiB;AAACC,cAAAA,IAAI,EAAC;AAAN,aAAjB;AACCnC,YAAAA,QAAQ,CAAC,YAAD,CAAR;AACJ;AACJ;AACJ,OAzBD,MA2BIE,WAAW,CAAC,cAAD,CAAX;AACP,KA/BL;AAmCA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GA1FD;;AA6FI,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEmC,MAAAA,eAAe,EAAE,OAAMvC,KAAM,GAA/B;AAAmCwC,MAAAA,MAAM,EAAC,OAA1C;AAAmDC,MAAAA,kBAAkB,EAAC;AAAtE,KAAZ;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI;AAAA,+BACI;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,OAAZ;AAAoB,gBAAA,SAAS,EAAC,cAA9B;AAA6C,gBAAA,IAAI,EAAC,OAAlD;AAA0D,gBAAA,EAAE,EAAC,OAA7D;AAAqE,gBAAA,WAAW,EAAC,OAAjF;AAAyF,gBAAA,QAAQ,EAAE9B;AAAnG;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAK,cAAA,SAAS,EAAC,qBAAf;AAAA,sCACI;AAAO,gBAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,SAAS,EAAC,cAAjC;AAAiD,gBAAA,IAAI,EAAC,KAAtD;AAA4D,gBAAA,EAAE,EAAC,KAA/D;AAAqE,gBAAA,WAAW,EAAC,UAAjF;AAA4F,gBAAA,QAAQ,EAAEA;AAAtG;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAEwH;AAAA;AAAA;AAAA;AAAA,sBAFxH,eAGI;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAsB,gBAAA,SAAS,EAAC,gBAAhC;AAAiD,gBAAA,OAAO,EAAEK,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII;AAAG,gBAAA,SAAS,EAAC,aAAb;AAAA,0BAA4Bb;AAA5B;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBP;;GA5IuBF,K;UACNJ,W;;;KADMI,K","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport MainMenu from \"./MainMenu\";\r\nimport myStore from \"./Store\";\r\nimport myimg from '../images/RTOS.jpg';\r\n\r\nexport default function Login (){\r\n    let navigate= useNavigate();\r\n    const [errormsg,setErrormsg] = useState(\"\");\r\n    const [ state, setState]= useState(\r\n        {\r\n            email:\"\",\r\n            pwd:\"\" ,\r\n            citizen:{},\r\n            staff:{}\r\n        }\r\n    )\r\n\r\n\r\n    const handleInput=(ev)=>{\r\n        setState((state)=>(\r\n            {\r\n                ...state,\r\n                [ev.target.name]: ev.target.value \r\n            }\r\n        ));\r\n    }\r\n\r\n    const login=(ev)=>{\r\n        ev.preventDefault();\r\n        //alert(this.state.email);\r\n        //alert(this.state.pwd);\r\n        const req= {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    email: state.email,\r\n                    password: state.pwd\r\n                })\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/logincheck\", req)\r\n            .then(resp => resp.text())\r\n            .then(data => {\r\n                if(data.length != 0 )\r\n                {\r\n                    const json = JSON.parse(data);\r\n                    if(json.role)\r\n                    {\r\n                        //console.log(json.role);\r\n                        localStorage.setItem(\"loggeduser\", JSON.stringify(json));\r\n                        myStore.dispatch({type:'LOGGEDIN'});\r\n                        navigate('/adminhome');\r\n                    }    \r\n                    else if(json.user.role)\r\n                    {\r\n                        if(json.user.role === \"citizen\")\r\n                        {\r\n                            localStorage.setItem(\"loggeduser\", JSON.stringify(json));\r\n                            myStore.dispatch({type:'LOGGEDIN'});\r\n                             navigate('/citizenhome');\r\n                        }\r\n                        else if(json.user.role === \"staff\")\r\n                        {\r\n                            localStorage.setItem(\"loggeduser\", JSON.stringify(json));\r\n                            myStore.dispatch({type:'LOGGEDIN'});\r\n                             navigate('/staffhome');\r\n                        } \r\n                    }      \r\n                }\r\n                else\r\n                    setErrormsg('Wrong ID/pwd') ;     \r\n            }) \r\n\r\n\r\n\r\n        /*fetch(\"http://localhost:8080/logincheck\", req)\r\n            .then(resp => resp.text())\r\n            .then(data => {\r\n                            alert(data);\r\n                            if(data.length != 0)\r\n                            {\r\n                                const obj = JSON.parse(data);\r\n                                alert(JSON.stringify(obj));\r\n                                localStorage.setItem(\"loggeduser\", JSON.stringify(obj));\r\n                                let role = (JSON.parse(localStorage.getItem(\"loggeduser\"))).user.role;\r\n                                alert(role);\r\n                                //console.log(role);\r\n                                if(role === \"staff\")\r\n                                {\r\n                                    myStore.dispatch({type:'LOGGEDIN'});\r\n                                    navigate('/staffhome');                                    \r\n                                }\r\n                                else if(role === \"citizen\")\r\n                                {\r\n                                    myStore.dispatch({type:'LOGGEDIN'});\r\n                                    navigate('/citizenhome');\r\n                                }\r\n                                else\r\n                                {\r\n                                    navigate('/adminhome');\r\n                                }\r\n                            }\r\n                            else\r\n                            {\r\n                                setState((state)=>(\r\n                                    {\r\n                                        ...state,\r\n                                        errormsg: \"Wrong ID/password\"\r\n                                    }\r\n                                ));\r\n                            }\r\n                                \r\n                                    \r\n                         });   */\r\n    }\r\n\r\n\r\n        return (\r\n            <div style={{ backgroundImage:`url(${myimg})`, height:\"500px\", backgroundPosition:\"center\"}}>\r\n            <div className=\"container col-md-6\">\r\n                <div> \r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={handleInput}/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputPassword4\">Password</label>\r\n                                <input type=\"password\" className=\"form-control\"  name=\"pwd\" id=\"pwd\" placeholder=\"Password\" onChange={handleInput}/><br/>\r\n                                <button type=\"submit\" className=\"btn btn-danger\" onClick={login}>LOGIN</button>\r\n                                <p className=\"text-danger\">{errormsg}</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                 </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    \r\n    \r\n}"]},"metadata":{},"sourceType":"module"}